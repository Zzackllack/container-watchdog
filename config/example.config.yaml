# This is an example configuration file for the Container Watchdog script.
# Map each URL to the container you want restarted on failure.

portainer:
  url: "https://your-portainer-url.com" # Your Portainer API endpoint
  api_key: "your_api_key_here" # Your Portainer API key
  endpoint_id: 1 # The ID of the Docker endpoint in Portainer
  timeout: 10 # Timeout in seconds for Portainer API requests

checks:
  # Map each URL to its container name
  mapping:
    "https://first-container.com": "first-container"
    "https://second-container.com": "second-container"
  # All HTTP status codes listed here will trigger a container restart
  error_status_codes:
    - 502
    - 503
    - 504
  # Timeout in seconds when waiting for each request
  timeout: 5

restart:
  # Behavior: "restart" = direct API restart, "stop_start" = stop → delay → start
  behavior: "stop_start"
  # Delay in seconds between stop and start (only for stop_start)
  delay: 10

interval:
  # Frequency of health checks in seconds
  seconds: 300

# Checkmate API configuration a container will be restarted if Checkmates API reports it as down
checkmate:
  # This is your url where you host Checkmate, use the base URL without /api/v1 or trailing slash
  api_url: "https://checkmate.yourdomain.com"
  # Your Checkmate account email, used for authentication
  email: "youremail@domain.com"
  # Your Checkmate account password, used for authentication
  password: "your_password_here"
  # Timeout in seconds for Checkmate API requests
  timeout: 10
  # Mapping of Checkmate monitor IDs to Portainer container names
  mapping:
    # Monitor-ID from Checkmate, you can find this if you open a monitor in Checkmate and look at the URL
    # Example: https://checkmate.yourdomain.com/uptime/some_monitor_id : The container name in Portainer
    "your_monitor_id": "container-name-in-portainer"
